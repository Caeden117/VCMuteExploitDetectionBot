using DSharpPlus.Entities;
using VCMuteExploitDetectionBot.Configuration;

namespace VCMuteExploitDetectionBot.Services
{
    public class ExploitPunishmentService
    {
        private readonly DiscordGuild client;
        private readonly Config config;

        public ExploitPunishmentService(DiscordGuild client, ExploitDetectionService detection, Config config)
        {
            this.client = client;
            this.config = config;

            detection.FakeMuteExploitDetected += Detection_FakeMuteExploitDetected;
        }

        private async void Detection_FakeMuteExploitDetected(AbuseTracker detectedUser)
        {
            if (detectedUser.IsFlagged) return;

            await Logger.Warning("Exploit", $"Detected {detectedUser.UserID} using a voice chat exploit with {detectedUser.ConsecutiveHits} consecutive hits.");

            detectedUser.IsFlagged = true;

            if (!config.BanDetectedUsers) return;

            var user = await client.GetMemberAsync(detectedUser.UserID);

            await client.BanMemberAsync(user, 0, $"Detected abuse of the Fake Mute exploit");
        }
    }
}
